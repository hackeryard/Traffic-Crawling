如何在linux命令行无界面下，使用selenium进行自动化测试:
安装 Xvfb 和 pyvirtualdisplay，后者依赖于前者
在windows下测试，是不需要这个的，在linux下部署时再添加上
问题调试：
D:\Python\lib\site-packages\selenium\webdriver\firefox\firefox_profile.py

按照要求消除浏览器自带的流量和系统自带的基础通信流量：
1.浏览器更新流量：amazon(ec数据中心) cloudfront(amazon的cdn) akamai
自带：/usr/bin/firefox -> ../lib/firefox/firefox.sh
替换为旧版本55的bin：
https://ftp.mozilla.org/pub/firefox/releases/55.0.1/linux-x86_64/en-US/firefox-55.0.1.tar.bz2

权限：runking
路径：/home/runking/traffic/Traffic-Crawling/tbcrawler
命令执行：
python3 pytbcrawler.py -u ../etc/localized-urls-100-top.csv -c wang_and_goldberg
默认配置：
urls：42类
batch：10
visit：4
每个batch会把所有url抓取一遍，每个url抓取visit次，作为一个instance
流量保存在results：0_0_0：batch-0 url-0 visit-0

步骤：
1.过滤TLS
2.维护一个ip解析库 如果解析的域名满足通配符 则留下（这种精确度会更高）
或者只使用第一步

目前只能使用下一步 尽量维护一个ip池
211.91.241.253 这个是alicdn的服务器 但chinaz查询不到
解析 然后匹配ali 如果完全不是 则舍弃 否则保留
或：手动去掉amazon的服务（有ptr记录，且记录为相关的，都丢弃）

查看论文whois：策略实现困难 当前有ip2location的api 但查询不到域名的信息
因为域名是ISP提供的，服务器是云服务商提供的，查域名只能查到ISP

docker version（79服务器）:
/bin/geckodriver
/bin/firefox/firefox
测试：
docker build -t tbcrawl --rm .
docker run -d --name tbcrawler tbcrawl:latest
docker run -it --name tbcrawler tbcrawl:latest /bin/bash
docker exec -it tbcrawler /bin/bash
如果要正常退出不关闭容器，请按Ctrl+P+Q进行退出容器

路径：/root/Traffic-Crawling/tbcrawler


git clone https://github.com/hackeryard/Traffic-Crawling.git

修改配置config.ini：
job interface=eth0

python3 pytbcrawler.py -u ../etc/localized-urls-100-top.csv -c wang_and_goldberg